name: Build Pull Request
on:
  push:
    branches: [main, dev]

  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        dotnet-version: ["6.0.x"]
    steps:
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Restore packages
        run: dotnet restore
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.ACTION_GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"pkantorowicz_NHibernate.UnitOfWork.Core" /o:"5amjgdjdfga3d1e6dfwqqssavw234safccccc" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet build --configuration Release --no-restore
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
      - name: Test
        run: dotnet test src/NHibernate.UnitOfWork.Core.Tests/NHibernate.UnitOfWork.Core.Tests.csproj --no-restore --verbosity normal --logger "trx;LogFilePrefix=TestResults-${{ matrix.dotnet-version }}.trx" --results-directory "TestResults-${{ matrix.dotnet-version }}" /p:CollectCoverage=true /p:CoverletOutputFormat=opencover
      - name: Analyze tests coverage
        uses: codecov/codecov-action@v1
      - name: Upload dotnet test results
        uses: actions/upload-artifact@v2
        with:
          name: TestResults-${{ matrix.dotnet-version }}
          path: TestResults-${{ matrix.dotnet-version }}
        if: ${{ always() }}
      - name: Tests report generation
        uses: dorny/test-reporter@v1.5.0
        if: success() || failure()
        with:
          name: TestResults-${{ matrix.dotnet-version }}
          path: "**/*.trx"
          reporter: dotnet-trx
          list-tests: "failed"
